#[allow(unused_imports)]
use super::ltsv;
#[allow(unused_imports)]
use super::json;

{% import "macros.tera" as macros %}{% for type in types %}pub struct {{ type.name|upper_camel }} {
    {{ macros::type_parameters(fields=type.fields) }}
}

impl {{ type.name|upper_camel }} {
    #[allow(dead_code)]
    pub fn to_ltsv(&self) -> String {
        format!("{{ macros::type_ltsv_format(fields=type.fields) }}", {{ macros::type_arguments(fields=type.fields, format_name="ltsv", escape="escape") }})
    }

    #[allow(dead_code)]
    pub fn to_json(&self) -> String {
        format!("{{ macros::type_json_format(fields=type.fields) }}", {{ macros::type_arguments(fields=type.fields, format_name="json", escape="escape") }})
    }

    #[allow(dead_code)]
    pub fn to_json_no_multibyte_escaping(&self) -> String {
        format!("{{ macros::type_json_format(fields=type.fields) }}", {{ macros::type_arguments(fields=type.fields, format_name="json", escape="escape_without_multibytes") }})
    }
}

{% endfor %}

#[allow(unused_imports)]
use super::ltsv;
#[allow(unused_imports)]
use super::ltsv::ToLtsv;
#[allow(unused_imports)]
use super::json;
#[allow(unused_imports)]
use super::json::ToJson;
#[allow(unused_imports)]
use super::types::*;

{% import "macros.tera" as macros %}{% for log in logs %}pub struct {{ log.name|upper_camel }} {
    {{ macros::parameters(default_log=default_log, fields=log.fields) }}
}

impl {{ log.name|upper_camel }} {
    #[allow(dead_code)]
    pub fn to_ltsv(&self) -> String {
        format!("{{ macros::ltsv_format(default_log=default_log, fields=log.fields) }}", {{ macros::arguments(default_log=default_log, fields=log.fields, format_name="ltsv", escape="escape") }})
    }

    #[allow(dead_code)]
    pub fn to_json(&self, escaping_type: &json::JsonEscapingType) -> String {
        format!("{{ macros::json_format(default_log=default_log, fields=log.fields) }}", {{ macros::arguments_with_escaping_type(default_log=default_log, fields=log.fields, format_name="json") }})
    }
}

{% endfor %}
